OPENJDK 13

Compiled from "Bench.scala"
public class example.Bench {
  public scala.collection.immutable.IndexedSeq<java.lang.Object> methodStandardFilter();
    Code:
       0: getstatic     #40                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: invokevirtual #49                 // Method scala/Predef$.intWrapper:(I)I
      10: ldc           #50                 // int 50000
      12: invokevirtual #54                 // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      15: invokedynamic #72,  0             // InvokeDynamic #0:apply$mcZI$sp:()Lscala/runtime/java8/JFunction1$mcZI$sp;
      20: invokevirtual #76                 // Method scala/collection/immutable/Range$Inclusive.filter:(Lscala/Function1;)Ljava/lang/Object;
      23: checkcast     #78                 // class scala/collection/IndexedSeqOps
      26: invokedynamic #87,  0             // InvokeDynamic #1:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      31: invokeinterface #90,  2           // InterfaceMethod scala/collection/IndexedSeqOps.map:(Lscala/Function1;)Ljava/lang/Object;
      36: checkcast     #92                 // class scala/collection/immutable/IndexedSeq
      39: areturn

  public scala.collection.immutable.IndexedSeq<java.lang.Object> methodWithFilter();
    Code:
       0: getstatic     #40                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: invokevirtual #49                 // Method scala/Predef$.intWrapper:(I)I
      10: ldc           #50                 // int 50000
      12: invokevirtual #54                 // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      15: invokedynamic #100,  0            // InvokeDynamic #2:apply$mcZI$sp:()Lscala/runtime/java8/JFunction1$mcZI$sp;
      20: invokevirtual #104                // Method scala/collection/immutable/Range$Inclusive.withFilter:(Lscala/Function1;)Lscala/collection/WithFilter;
      23: invokedynamic #109,  0            // InvokeDynamic #3:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      28: invokevirtual #112                // Method scala/collection/WithFilter.map:(Lscala/Function1;)Ljava/lang/Object;
      31: checkcast     #92                 // class scala/collection/immutable/IndexedSeq
      34: areturn

  public scala.collection.immutable.List<java.lang.Object> testWithView();
    Code:
       0: getstatic     #40                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: invokevirtual #49                 // Method scala/Predef$.intWrapper:(I)I
      10: ldc           #50                 // int 50000
      12: invokevirtual #54                 // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      15: invokevirtual #119                // Method scala/collection/immutable/Range$Inclusive.view:()Lscala/collection/IndexedSeqView;
      18: invokedynamic #124,  0            // InvokeDynamic #4:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      23: invokeinterface #129,  2          // InterfaceMethod scala/collection/IndexedSeqView.map:(Lscala/Function1;)Lscala/collection/IndexedSeqView;
      28: invokeinterface #133,  1          // InterfaceMethod scala/collection/IndexedSeqView.zipWithIndex:()Ljava/lang/Object;
      33: checkcast     #135                // class scala/collection/IterableOps
      36: invokedynamic #147,  0            // InvokeDynamic #5:apply:()Lscala/Function1;
      41: invokeinterface #148,  2          // InterfaceMethod scala/collection/IterableOps.map:(Lscala/Function1;)Ljava/lang/Object;
      46: checkcast     #150                // class scala/collection/IterableOnceOps
      49: invokeinterface #153,  1          // InterfaceMethod scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
      54: areturn

  public scala.collection.immutable.IndexedSeq<java.lang.Object> testWithoutView();
    Code:
       0: getstatic     #40                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: invokevirtual #49                 // Method scala/Predef$.intWrapper:(I)I
      10: ldc           #50                 // int 50000
      12: invokevirtual #54                 // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      15: invokedynamic #159,  0            // InvokeDynamic #6:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      20: invokevirtual #162                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      23: invokeinterface #163,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.zipWithIndex:()Ljava/lang/Object;
      28: checkcast     #78                 // class scala/collection/IndexedSeqOps
      31: invokedynamic #168,  0            // InvokeDynamic #7:apply:()Lscala/Function1;
      36: invokeinterface #90,  2           // InterfaceMethod scala/collection/IndexedSeqOps.map:(Lscala/Function1;)Ljava/lang/Object;
      41: checkcast     #92                 // class scala/collection/immutable/IndexedSeq
      44: areturn

  public scala.collection.immutable.List<java.lang.Object> testWithoutViewWithConversion();
    Code:
       0: getstatic     #40                 // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       3: getstatic     #45                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       6: iconst_1
       7: invokevirtual #49                 // Method scala/Predef$.intWrapper:(I)I
      10: ldc           #50                 // int 50000
      12: invokevirtual #54                 // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      15: invokedynamic #174,  0            // InvokeDynamic #8:apply$mcII$sp:()Lscala/runtime/java8/JFunction1$mcII$sp;
      20: invokevirtual #162                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      23: invokeinterface #163,  1          // InterfaceMethod scala/collection/immutable/IndexedSeq.zipWithIndex:()Ljava/lang/Object;
      28: checkcast     #78                 // class scala/collection/IndexedSeqOps
      31: invokedynamic #179,  0            // InvokeDynamic #9:apply:()Lscala/Function1;
      36: invokeinterface #90,  2           // InterfaceMethod scala/collection/IndexedSeqOps.map:(Lscala/Function1;)Ljava/lang/Object;
      41: checkcast     #150                // class scala/collection/IterableOnceOps
      44: invokeinterface #153,  1          // InterfaceMethod scala/collection/IterableOnceOps.toList:()Lscala/collection/immutable/List;
      49: areturn

  public static final boolean $anonfun$methodStandardFilter$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpeq     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static final int $anonfun$methodStandardFilter$2(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iadd
       3: ireturn

  public static final boolean $anonfun$methodWithFilter$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpeq     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static final int $anonfun$methodWithFilter$2(int);
    Code:
       0: iload_0
       1: iconst_2
       2: iadd
       3: ireturn

  public static final int $anonfun$testWithView$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: imul
       3: ireturn

  public static final int $anonfun$testWithView$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #194                // Method scala/Tuple2._1$mcI$sp:()I
       4: aload_0
       5: invokevirtual #197                // Method scala/Tuple2._2$mcI$sp:()I
       8: iadd
       9: ireturn

  public static final int $anonfun$testWithoutView$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: imul
       3: ireturn

  public static final int $anonfun$testWithoutView$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #194                // Method scala/Tuple2._1$mcI$sp:()I
       4: aload_0
       5: invokevirtual #197                // Method scala/Tuple2._2$mcI$sp:()I
       8: iadd
       9: ireturn

  public static final int $anonfun$testWithoutViewWithConversion$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: imul
       3: ireturn

  public static final int $anonfun$testWithoutViewWithConversion$2(scala.Tuple2);
    Code:
       0: aload_0
       1: invokevirtual #194                // Method scala/Tuple2._1$mcI$sp:()I
       4: aload_0
       5: invokevirtual #197                // Method scala/Tuple2._2$mcI$sp:()I
       8: iadd
       9: ireturn

  public example.Bench();
    Code:
       0: aload_0
       1: invokespecial #206                // Method java/lang/Object."<init>":()V
       4: return

  public static final java.lang.Object $anonfun$testWithView$2$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #208                // Method $anonfun$testWithView$2:(Lscala/Tuple2;)I
       4: invokestatic  #214                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$testWithoutView$2$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #216                // Method $anonfun$testWithoutView$2:(Lscala/Tuple2;)I
       4: invokestatic  #214                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$testWithoutViewWithConversion$2$adapted(scala.Tuple2);
    Code:
       0: aload_0
       1: invokestatic  #218                // Method $anonfun$testWithoutViewWithConversion$2:(Lscala/Tuple2;)I
       4: invokestatic  #214                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn
}

=========================================================================================================================================================

Compiled from "MonadicWrappersChecker.scala"
public class example.MonadicWrappersChecker {
  public scala.collection.immutable.Seq<scala.Option<java.lang.Object>> generatedOptions();
    Code:
       0: aload_0
       1: getfield      #26                 // Field generatedOptions:Lscala/collection/immutable/Seq;
       4: areturn

  public scala.collection.immutable.Seq<java.lang.Object> testFlatten();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method generatedOptions:()Lscala/collection/immutable/Seq;
       4: getstatic     #50                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: invokevirtual #54                 // Method scala/Predef$.$conforms:()Lscala/Function1;
      10: invokeinterface #60,  2           // InterfaceMethod scala/collection/immutable/Seq.flatten:(Lscala/Function1;)Ljava/lang/Object;
      15: checkcast     #56                 // class scala/collection/immutable/Seq
      18: areturn

  public scala.collection.immutable.Seq<java.lang.Object> testPatternMatching();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method generatedOptions:()Lscala/collection/immutable/Seq;
       4: invokedynamic #80,  0             // InvokeDynamic #0:apply:()Lscala/Function1;
       9: invokeinterface #83,  2           // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #56                 // class scala/collection/immutable/Seq
      17: areturn

  public scala.collection.immutable.Seq<java.lang.Object> testIfElse();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method generatedOptions:()Lscala/collection/immutable/Seq;
       4: invokedynamic #89,  0             // InvokeDynamic #1:apply:()Lscala/Function1;
       9: invokeinterface #83,  2           // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #56                 // class scala/collection/immutable/Seq
      17: areturn

  public scala.collection.immutable.Seq<java.lang.Object> testGetOrElse();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method generatedOptions:()Lscala/collection/immutable/Seq;
       4: invokedynamic #95,  0             // InvokeDynamic #2:apply:()Lscala/Function1;
       9: invokeinterface #83,  2           // InterfaceMethod scala/collection/immutable/Seq.map:(Lscala/Function1;)Ljava/lang/Object;
      14: checkcast     #56                 // class scala/collection/immutable/Seq
      17: areturn

  public static final scala.Option $anonfun$generatedOptions$1(int);
    Code:
       0: iload_0
       1: iconst_2
       2: irem
       3: iconst_0
       4: if_icmpeq     20
       7: getstatic     #102                // Field scala/Option$.MODULE$:Lscala/Option$;
      10: iload_0
      11: invokestatic  #108                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      14: invokevirtual #111                // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      17: goto          23
      20: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      23: areturn

  public static final int $anonfun$testPatternMatching$1(scala.Option);
    Code:
       0: aload_0
       1: astore_2
       2: aload_2
       3: instanceof    #124                // class scala/Some
       6: ifeq          29
       9: aload_2
      10: checkcast     #124                // class scala/Some
      13: astore_3
      14: aload_3
      15: invokevirtual #127                // Method scala/Some.value:()Ljava/lang/Object;
      18: invokestatic  #131                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      21: istore        4
      23: iload         4
      25: istore_1
      26: goto          59
      29: goto          32
      32: getstatic     #116                // Field scala/None$.MODULE$:Lscala/None$;
      35: aload_2
      36: invokevirtual #135                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      39: ifeq          47
      42: iconst_1
      43: istore_1
      44: goto          59
      47: goto          50
      50: new           #137                // class scala/MatchError
      53: dup
      54: aload_2
      55: invokespecial #141                // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      58: athrow
      59: iload_1
      60: ireturn

  public static final int $anonfun$testIfElse$1(scala.Option);
    Code:
       0: aload_0
       1: invokevirtual #148                // Method scala/Option.isDefined:()Z
       4: ifeq          17
       7: aload_0
       8: invokevirtual #151                // Method scala/Option.get:()Ljava/lang/Object;
      11: invokestatic  #131                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      14: goto          18
      17: iconst_1
      18: ireturn

  public static final int $anonfun$testGetOrElse$2();
    Code:
       0: iconst_1
       1: ireturn

  public static final int $anonfun$testGetOrElse$1(scala.Option);
    Code:
       0: aload_0
       1: invokedynamic #162,  0            // InvokeDynamic #3:apply$mcI$sp:()Lscala/runtime/java8/JFunction0$mcI$sp;
       6: invokevirtual #166                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
       9: invokestatic  #131                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      12: ireturn

  public example.MonadicWrappersChecker();
    Code:
       0: aload_0
       1: invokespecial #169                // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #174                // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
       8: getstatic     #50                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_1
      12: invokevirtual #178                // Method scala/Predef$.intWrapper:(I)I
      15: ldc           #179                // int 50000
      17: invokevirtual #183                // Method scala/runtime/RichInt$.to$extension:(II)Lscala/collection/immutable/Range$Inclusive;
      20: invokedynamic #189,  0            // InvokeDynamic #4:apply:()Lscala/Function1;
      25: invokevirtual #192                // Method scala/collection/immutable/Range$Inclusive.map:(Lscala/Function1;)Lscala/collection/immutable/IndexedSeq;
      28: putfield      #26                 // Field generatedOptions:Lscala/collection/immutable/Seq;
      31: return

  public static final java.lang.Object $anonfun$testPatternMatching$1$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #194                // Method $anonfun$testPatternMatching$1:(Lscala/Option;)I
       4: invokestatic  #108                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$testIfElse$1$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #196                // Method $anonfun$testIfElse$1:(Lscala/Option;)I
       4: invokestatic  #108                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final java.lang.Object $anonfun$testGetOrElse$1$adapted(scala.Option);
    Code:
       0: aload_0
       1: invokestatic  #198                // Method $anonfun$testGetOrElse$1:(Lscala/Option;)I
       4: invokestatic  #108                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: areturn

  public static final scala.Option $anonfun$generatedOptions$1$adapted(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #131                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       4: invokestatic  #200                // Method $anonfun$generatedOptions$1:(I)Lscala/Option;
       7: areturn
}
